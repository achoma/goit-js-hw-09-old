{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAkBpC,SAASC,EAAeC,EAAQC,EAAOC,G,IAAMC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAYA,UAAA,GAAD,EACtD,GAAID,GAAYH,EAAQ,CACtB,IAAMM,EAAeL,GAASE,EAAW,GAAKD,EAC9CK,EAAcJ,EAAUG,GACrBE,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALR,MACjBW,EAAAlB,GAASmB,OAAOC,QACd,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,OAEhDZ,EAAeC,EAAQW,EAAOT,EAAMQ,EAAW,E,IAEhDM,OAAM,SAAAP,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALR,MAClBW,EAAAlB,GAASmB,OAAOI,QACd,sBAAqCF,OAAfL,EAAS,QAAYK,OAANJ,EAAM,OAE7CZ,EAAeC,EAAQW,EAAOT,EAAMQ,EAAW,E,KAKvD,SAASH,EAAcG,EAAUT,GAC/B,OAAO,IAAIiB,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAET,WAAUT,UAEpBmB,EAAO,CAAEV,WAAUT,S,GAEpBA,E,IA5CPW,EAAAlB,GAASmB,OAAOW,KAAK,CACnBC,MAAO,QACPf,SAAU,YACVgB,QAAS,OAGX9B,EAAK+B,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAEN,IAAM5B,EAAQ6B,SAASlC,EAAKmC,SAAS9B,MAAM+B,OACrC9B,EAAO4B,SAASlC,EAAKmC,SAAS7B,KAAK8B,OAGzCjC,EAFe+B,SAASlC,EAAKmC,SAAS/B,OAAOgC,OAEtB/B,EAAOC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nNotiflix.Notify.init({\n  width: '300px',\n  position: 'right-top',\n  timeout: 3500,\n});\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const delay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n  createPromises(amount, delay, step);\n});\n\nfunction createPromises(amount, delay, step, position = 1) {\n  if (position <= amount) {\n    const currentDelay = delay + (position - 1) * step;\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        createPromises(amount, delay, step, position + 1);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        createPromises(amount, delay, step, position + 1);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromises","amount","delay","step","position1","arguments","length","currentDelay","$ce04d3a99e08e73b$var$createPromise","then","param","position","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","Promise","resolve","reject","setTimeout","Math","random","init","width","timeout","addEventListener","event","preventDefault","parseInt","elements","value"],"version":3,"file":"03-promises.5957a1f4.js.map"}